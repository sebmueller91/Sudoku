# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: 'windows-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: 'src/android/Sudoku/'
    gradleWrapperFile: 'src/android/Sudoku/gradlew.bat'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleRelease'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'src/android/Sudoku/app/build'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TEST-*.xml'

- task: AndroidSigning@3
  inputs:
    apkFiles: '**/*.apk'
    apksignerKeystoreFile: 'dgs_software_certificate.p12'
    apksignerKeystorePassword: '$(CodeSigningPassword)'
    apksignerKeystoreAlias: 'dgs_software'